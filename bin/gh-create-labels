#!/usr/bin/env python
# pylint: disable=invalid-name

"""
Create labels on a GitHub repository

Usage:
    {0} <destination repo> <label name> <color>

Example:
    {0} schlueter/github-tool TODO ff8800

Your GitHub API token will be read from the environment variable GITHUB_TOKEN.
See https://github.com/blog/1509-personal-api-tokens for instructions on obtaining yours.
"""

from __future__ import print_function
import sys
import json

from github_api_client import utilities


def usage():
    print(__doc__.format(sys.argv[0]))

def main(args):
    args = parse_args(args)
    try:
        response = utilities.create_label(*args)
    except utilities.ResourceNotAvailable:
        print('Rate limit exceeded, this is usually due to unauthenticated access. Try setting a GITHUB_TOKEN.', file=sys.stderr)
        usage()
        exit(2)

    if response.status_code > 399:
        if 'errors' in response.json() and 'already_exists' in [error['code'] for error in response.json()['errors']]:
            print('Label "{}" already exists, nothing to do.'.format(
                json.loads(response.request.body)['name']))
        else:
            print('Unknown error {} ({}).'.format(response.status_code, response.reason))
            exit(2)
    else:
        print('Label "{}" successfully created with color #{}.'.format(response.json()['name'], response.json()['color']))

def parse_args(args):
    # Drop script name
    args = args[1:]

    if len(args) < 2:
        usage()
        exit(1)

    if '-h' in args or '--help' in args:
        usage()
        exit()

    return args

if __name__ == '__main__':
    main(sys.argv)
